{"version":3,"sources":["components/NavHeader.js","controllers/storage.js","components/NavBar.js","components/Section.js","components/TechSection.js","components/Card.js","components/DescriptionSection.js","components/GoalSection.js","components/TargetAudienceSection.js","components/ImpactSection.js","components/Dashboard.js","components/DesignIdeas.js","App.js","serviceWorker.js","index.js"],"names":["NavHeader","title","className","_storage","_data","projects","_save","jsonString","JSON","stringify","localStorage","setItem","_controller","getProjects","staticData","Object","keys","_staticJSON","addProject","project","_get","_pc","getTitle","getTech","technologies","getDescription","description","getGoals","goals","getTargetAudience","targetAudience","getImpacts","impacts","setTitle","setTech","setDescription","setGoals","setTargetAudience","setImpacts","getItem","parse","Storage","ProjectLinks","mode","useContext","ModeContext","useState","storage","map","text","editing","setProjects","setProject","i","e","target","value","saveProject","trim","splice","key","onChange","onBlur","autoFocus","to","onClick","ProjectDetailLinks","useParams","activeClassName","replace","exact","NavBar","path","Section","sectionStyle","bodyStyle","children","style","noop","TechTab","color","styles","first","last","setValue","setEditing","_styles","backgroundColor","marginLeft","marginRight","type","width","length","onKeyDown","TechSection","store","t","tech","editTech","newTech","setEditingFor","finishEditingTech","paddingLeft","paddingRight","border","cursor","Card","DescriptionSection","split","d","GoalSection","g","setGoalValue","editGoal","doneEditing","flex","TargetAudienceSection","ta","audience","setAudience","setAudienceValue","editAudience","ImpactSection","setImpactValue","editImpact","Title","SocialLink","Icon","url","icon","href","rel","Dashboard","display","DesignIdeas","alt","src","React","createContext","App","setMode","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+0CAaeA,G,MAVG,SAAC,GAEZ,IADLC,EACI,EADJA,MAEA,OACE,yBAAKC,UAAU,aACb,wBAAIA,UAAU,oBAAoBD,M,QCkFzBE,EAxFC,WACd,IAEIC,EAAQ,CACVC,SAAU,IAKNC,EAAQ,WACZ,IAAMC,EAAaC,KAAKC,UAAUL,GAClCM,aAAaC,QAVK,gBAUgBJ,IAG9BK,EAAc,CAClBC,YAAa,WAAkC,IAAD,yDAAP,GAAO,IAA9BC,kBAA8B,SAC5C,OAAIA,EACKC,OAAOC,KAAKC,EAAYZ,UAG1BU,OAAOC,KAAKZ,EAAMC,WAE3Ba,WAAY,SAACC,GACNf,EAAMC,SAASc,KAClBf,EAAMC,SAASc,GAAW,GAC1Bb,MAGJa,QAAS,SAACA,GAA0C,IAC9CC,EAD6C,yDAAP,GAAO,IAA9BN,kBAA8B,SAI/CM,EADEN,EACK,kBAAMG,EAAYZ,SAASc,IAE3B,kBAAMf,EAAMC,SAASc,IAG9B,IAAME,EAAM,CAEVC,SAAU,kBAAMF,IAAOnB,OAAS,IAChCsB,QAAS,kBAAMH,IAAOI,cAAgB,IACtCC,eAAgB,kBAAML,IAAOM,aAAe,IAC5CC,SAAU,kBAAMP,IAAOQ,OAAS,IAChCC,kBAAmB,kBAAMT,IAAOU,gBAAkB,IAClDC,WAAY,kBAAMX,IAAOY,SAAW,IAEpCC,SAAU,SAAChC,GACTmB,IAAOnB,MAAQA,EACfK,KAEF4B,QAAS,SAACV,GACRJ,IAAOI,aAAeA,EACtBlB,KAEF6B,eAAgB,SAACT,GACfN,IAAOM,YAAcA,EACrBpB,KAEF8B,SAAU,SAACR,GACTR,IAAOQ,MAAQA,EACftB,KAEF+B,kBAAmB,SAACP,GAClBV,IAAOU,eAAiBA,EACxBxB,KAEFgC,WAAY,SAACN,GACXZ,IAAOY,QAAUA,EACjB1B,MAIJ,OAAOe,IAWX,OANKX,aAAa6B,QA5EE,iBA+ElBnC,EAAQI,KAAKgC,MAAM9B,aAAa6B,QA/Ed,kBA6ElBjC,IAKKM,EAGQ6B,GC7EXC,G,MAAe,WAAO,IAClBC,EAASC,qBAAWC,GAApBF,KADiB,EAGOG,mBAC9BC,EAAQlC,YAAY,CAClBC,WAAsB,WAAT6B,IACZK,KAAI,SAAA7B,GAAO,MAAK,CACjB8B,KAAM9B,EAAS+B,SAAS,OAPH,mBAGlB7C,EAHkB,KAGR8C,EAHQ,KAenBC,EAAa,SAACC,GAAD,OAAO,SAACC,GACzBjD,EAASgD,GAAGJ,KAAOK,EAAEC,OAAOC,MAC5BL,EAAY,YAAI9C,MAGZoD,EAAc,SAACJ,GAAD,OAAO,WAGzB,GAFAhD,EAASgD,GAAGH,SAAU,EAEU,KAA5B7C,EAASgD,GAAGJ,KAAKS,OAEnB,OADArD,EAASsD,OAAON,EAAG,GACZF,EAAY,YAAI9C,IAGzB8C,EAAY,YAAI9C,IAChB0C,EAAQ7B,WAAWb,EAASgD,GAAGJ,QAGjC,OACE,oCACG5C,EAAS2C,KAAI,SAAC7B,EAASkC,GAAV,OACXlC,EAAQ+B,QACP,2BACEU,IAAKP,EACLG,MAAOrC,EAAQ8B,KACf/C,UAAU,wBACV2D,SAAUT,EAAWC,GACrBS,OAAQL,EAAYJ,GACpBU,WAAS,IAEX,kBAAC,IAAD,CACEH,IAAKP,EACLW,GAAE,WAAM7C,EAAQ8B,KAAd,KACF/C,UAAU,WAETiB,EAAQ8B,SAIL,SAATN,GACC,4BACEzC,UAAU,uBACV+D,QA7Cc,WACpBd,EAAY,GAAD,mBAAK9C,GAAL,CAAe,CAAE4C,KAAM,GAAIC,SAAS,QA0C3C,oBAWFgB,EAAqB,WAAO,IACxB/C,EAAYgD,cAAZhD,QAER,OACE,oCACE,kBAAC,IAAD,CACE6C,GAAE,WAAM7C,EAAN,KACFjB,UAAU,UACVkE,gBAAgB,kBAChBC,SAAO,EACPC,OAAK,GALP,aAUA,kBAAC,IAAD,CACEN,GAAE,WAAM7C,EAAN,iBACFjB,UAAU,UACVkE,gBAAgB,kBAChBC,SAAO,EACPC,OAAK,GALP,gBAUA,kBAAC,IAAD,CACEN,GAAE,WAAM7C,EAAN,qBACFjB,UAAU,UACVkE,gBAAgB,kBAChBC,SAAO,EACPC,OAAK,GALP,oBAUA,kBAAC,IAAD,CACEN,GAAE,WAAM7C,EAAN,aACFjB,UAAU,UACVkE,gBAAgB,kBAChBC,SAAO,EACPC,OAAK,GALP,YAUA,kBAAC,IAAD,CACEN,GAAE,WAAM7C,EAAN,QACFjB,UAAU,UACVkE,gBAAgB,kBAChBC,SAAO,EACPC,OAAK,GALP,OAUA,kBAAC,IAAD,CACEN,GAAE,WAAM7C,EAAN,UACFjB,UAAU,UACVkE,gBAAgB,kBAChBC,SAAO,EACPC,OAAK,GALP,SAUA,kBAAC,IAAD,CACEN,GAAE,WAAM7C,EAAN,eACFjB,UAAU,UACVkE,gBAAgB,kBAChBC,SAAO,EACPC,OAAK,GALP,cAUA,kBAAC,IAAD,CACEN,GAAE,WAAM7C,EAAN,aACFjB,UAAU,UACVkE,gBAAgB,kBAChBC,SAAO,EACPC,OAAK,GALP,cA+BSC,EAlBA,WACb,OACE,yBAAKrE,UAAU,UACb,kBAAC,EAAD,CAAWD,MAAM,iBAEjB,yBAAKC,UAAU,iBACb,kBAAC,IAAD,CAAOsE,KAAK,IAAIF,OAAK,GACnB,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOE,KAAK,aACV,kBAAC,EAAD,U,QCxJKC,G,MApBC,SAAC,GAKV,IAJLxE,EAII,EAJJA,MAII,IAHJyE,oBAGI,MAHW,GAGX,MAFJC,iBAEI,MAFQ,GAER,EADJC,EACI,EADJA,SAEA,OACE,yBAAK1E,UAAU,UAAU2E,MAAOH,GAC9B,wBACExE,UAAU,kBAEPD,GAEL,yBAAKC,UAAU,gBAAgB2E,MAAOF,GACnCC,MCbHE,EAAO,aAEPC,EAAU,SAAC,GAWV,IAVLC,EAUI,EAVJA,MAUI,IATJC,cASI,MATK,GASL,MARJC,aAQI,aAPJC,YAOI,aANJjC,eAMI,aALJW,gBAKI,MALOiB,EAKP,MAJJM,gBAII,MAJON,EAIP,MAHJO,kBAGI,MAHSP,EAGT,MAFJb,eAEI,SADJW,EACI,EADJA,SAEIU,EAAO,eACNL,GAGDD,IACFM,EAAQC,gBAAkBP,GAGxBE,IACFI,EAAQE,WAAa,KAGnBL,IACFG,EAAQG,YAAc,KAsBxB,OACE,yBACEvF,UAAU,qBACV2E,MAAOS,EACPrB,QAASA,GAAWoB,GAtBjBnC,EAGH,2BACEwC,KAAK,OACLlC,MAAOoB,EACP1E,UAAU,2BACV2E,MAAO,CACLc,MAAM,GAAD,OAAuB,GAAlBf,EAASgB,OAAd,OAEP/B,SAAU,SAACP,GAAD,OAAOO,EAASP,EAAEC,OAAOC,QACnCqC,UAAW,gBAAGjC,EAAH,EAAGA,IAAH,OAAsB,UAARA,GAA2B,WAARA,IAAqBwB,KACjEtB,OAAQsB,EACRrB,WAAS,IAZJa,IAqGEkB,EAzEK,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACbpD,EAASC,qBAAWC,GAApBF,KADyB,EAGTG,mBACtBiD,EAAMxE,UAAUyB,KAAI,SAAAgD,GAAC,MAAK,CACxB/C,KAAM+C,EAAG9C,SAAS,OALW,mBAG1B+C,EAH0B,KAGpB/D,EAHoB,OASHY,oBAAS,GATN,mBAS1BI,EAT0B,KASjBmC,EATiB,KAgB3Ba,EAAW,SAAC7C,GAAD,OAAO,SAAC8C,GACvBF,EAAK5C,GAAGJ,KAAOkD,EACfjE,EAAQ,YAAI+D,MAGRG,EAAgB,SAAC/C,GAAD,OAAO,WACd,SAATV,IACFsD,EAAK5C,GAAGH,SAAU,EAClBmC,GAAW,MAITgB,EAAoB,SAAChD,GAAD,OAAO,WACH,KAAxB4C,EAAK5C,GAAGJ,KAAKS,OACfuC,EAAKtC,OAAON,EAAG,GAEf4C,EAAK5C,GAAGH,SAAU,EAEpBhB,EAAQ,YAAI+D,IACZZ,GAAW,GACXU,EAAM7D,QAAQ+D,EAAKjD,KAAI,SAAAgD,GAAC,OAAIA,EAAE/C,WAGhC,OACE,kBAAC,EAAD,CAAShD,MAAM,qBACZgG,GAAQA,EAAKjD,KAAI,SAACgD,EAAG3C,GAAJ,OAChB,kBAAC,EAAD,CACEO,IAAKP,EACL6B,MAAa,IAAN7B,EACP2B,MAAM,UACN9B,QAAS8C,EAAE9C,QACXW,SAAUqC,EAAS7C,GACnBgC,WAAYe,EAAc/C,GAC1B+B,SAAUiB,EAAkBhD,IAE3B2C,EAAE/C,SAII,SAATN,IAAqBO,GAAW,kBAAC,EAAD,CAChCiC,MAAI,EACJH,MAAM,cACNC,OAAQ,CACND,MAAO,UACPsB,YAAa,OACbC,aAAc,OACdC,OAAQ,oBACRC,OAAQ,WAEVxC,QAAS,kBArDb/B,EAAQ,GAAD,mBAAK+D,GAAL,CAAW,CAAEhD,KAAM,GAAIC,SAAS,WACvCmC,GAAW,KA0CyB,O,QCpHlCP,G,MAAO,cAYE4B,EAVF,SAAC,GAAD,QACX7B,aADW,MACH,GADG,MAEXZ,eAFW,MAEDa,EAFC,EAGXF,EAHW,EAGXA,SAHW,OAKX,yBAAKC,MAAOA,EAAO3E,UAAU,OAAO+D,QAASA,GAC1CW,ICiCU+B,EAtCY,SAAC,GAAe,IAAbZ,EAAY,EAAZA,MACpBpD,EAASC,qBAAWC,GAApBF,KADgC,EAGFG,mBACpCiD,EAAMtE,kBAJgC,mBAGjCC,EAHiC,KAGpBS,EAHoB,OAOVW,oBAAS,GAPC,mBAOjCI,EAPiC,KAOxBmC,EAPwB,KAcxC,OACE,kBAAC,EAAD,CAASpF,MAAM,uBACb,kBAAC,EAAD,CAAMgE,QAAS,kBAAMoB,EAAoB,SAAT1C,KAC9B,wBACEzC,UAAU,0BAETgD,GACC,kBAAC,IAAD,CACEM,MAAO9B,EACPxB,UAAU,+BACV2D,SAAU,SAACP,GAAD,OAAOnB,EAAemB,EAAEC,OAAOC,QACzCM,OAhBQ,WAClBuB,GAAW,GACXU,EAAM5D,eAAeT,IAeXqC,WAAS,KAGXb,GAAWxB,EAAYkF,MAAM,QAAQ5D,KAAI,SAAC6D,EAAGxD,GAAJ,OACzC,uBAAGO,IAAKP,GAAIwD,UCiDTC,EAhFK,SAAC,GAAe,IAAbf,EAAY,EAAZA,MACbpD,EAASC,qBAAWC,GAApBF,KADyB,EAGPG,mBACxBiD,EAAMpE,WAAWqB,KAAI,SAAA+D,GAAC,MAAK,CACzB9D,KAAM8D,EAAG7D,SAAS,OALW,mBAG1BtB,EAH0B,KAGnBQ,EAHmB,OASHU,oBAAS,GATN,mBAS1BI,EAT0B,KASjBmC,EATiB,KAgB3B2B,EAAe,SAAC3D,GAAD,OAAO,SAACC,GAC3B1B,EAAMyB,GAAGJ,KAAOK,EAAEC,OAAOC,MACzBpB,EAAS,YAAIR,MAGTqF,EAAW,SAAC5D,GAAD,OAAO,WACT,SAATV,IACFf,EAAMyB,GAAGH,SAAU,EACnBd,EAAS,YAAIR,OAIXsF,EAAc,SAAC7D,GAAD,OAAO,WACzBgC,GAAW,GACXzD,EAAMyB,GAAGH,SAAU,EAEU,KAAzBtB,EAAMyB,GAAGJ,KAAKS,QAChB9B,EAAM+B,OAAON,EAAG,GAGlBjB,EAAS,YAAIR,IACbmE,EAAM3D,SAASR,EAAMoB,KAAI,SAAA+D,GAAC,OAAIA,EAAE9D,WAGlC,OACE,kBAAC,EAAD,CACEhD,MAAM,OACNyE,aAAc,CAAEyC,KAAM,KACtBxC,UAAW,CAAE4B,aAAc,WAE3B,kBAAC,EAAD,KACE,wBAAIrG,UAAU,mBACX0B,EAAMoB,KAAI,SAAC+D,EAAG1D,GAAJ,OACT,wBACEO,IAAKP,EACLY,QAASgD,EAAS5D,IAEjB0D,EAAE7D,SACD,2BACEhD,UAAU,wBACVsD,MAAOuD,EAAE9D,KACTY,SAAUmD,EAAa3D,GACvBS,OAAQoD,EAAY7D,GACpBU,WAAS,KAGXgD,EAAE7D,SAAW6D,EAAE9D,UAKZ,SAATN,IAAqBO,GACrB,4BACEhD,UAAU,uBACV+D,QA3DM,WACdoB,GAAW,GACXjD,EAAS,GAAD,mBAAMR,GAAN,CAAa,CAAEqB,KAAM,GAAIC,SAAS,QAuDpC,QCYKkE,EAhFe,SAAC,GAAe,IAAbrB,EAAY,EAAZA,MACvBpD,EAASC,qBAAWC,GAApBF,KADmC,EAGXG,mBAC9BiD,EAAMlE,oBAAoBmB,KAAI,SAAAqE,GAAE,MAAK,CACnCpE,KAAMoE,EAAInE,SAAS,OALoB,mBAGpCoE,EAHoC,KAG1BC,EAH0B,OASbzE,oBAAS,GATI,mBASpCI,EAToC,KAS3BmC,EAT2B,KAgBrCmC,EAAmB,SAACnE,GAAD,OAAO,SAACC,GAC/BgE,EAASjE,GAAGJ,KAAOK,EAAEC,OAAOC,MAC5B+D,EAAY,YAAID,MAGZG,EAAe,SAACpE,GAAD,OAAO,WACb,SAATV,IACF2E,EAASjE,GAAGH,SAAU,EACtBqE,EAAY,YAAID,OAIdJ,EAAc,SAAC7D,GAAD,OAAO,WACzBgC,GAAW,GACXiC,EAASjE,GAAGH,SAAU,EAEU,KAA5BoE,EAASjE,GAAGJ,KAAKS,QACnB4D,EAAS3D,OAAON,EAAG,GAGrBkE,EAAY,YAAID,IAChBvB,EAAM1D,kBAAkBiF,EAAStE,KAAI,SAAAqE,GAAE,OAAIA,EAAGpE,WAGhD,OACE,kBAAC,EAAD,CACEhD,MAAM,kBACNyE,aAAc,CAAEyC,KAAM,KACtBxC,UAAW,CAAE2B,YAAa,WAE1B,kBAAC,EAAD,KACE,wBAAIpG,UAAU,mBACXoH,EAAStE,KAAI,SAAC+D,EAAG1D,GAAJ,OACZ,wBACEO,IAAKP,EACLY,QAASwD,EAAapE,IAErB0D,EAAE7D,SACD,2BACEhD,UAAU,wBACVsD,MAAOuD,EAAE9D,KACTY,SAAU2D,EAAiBnE,GAC3BS,OAAQoD,EAAY7D,GACpBU,WAAS,KAGXgD,EAAE7D,SAAW6D,EAAE9D,UAKZ,SAATN,IAAqBO,GACrB,4BACEhD,UAAU,uBACV+D,QA3DU,WAClBoB,GAAW,GACXkC,EAAY,GAAD,mBAAMD,GAAN,CAAgB,CAAErE,KAAM,GAAIC,SAAS,QAuD1C,QCYKwE,EAhFO,SAAC,GAAe,IAAb3B,EAAY,EAAZA,MACfpD,EAASC,qBAAWC,GAApBF,KAD2B,EAGLG,mBAC5BiD,EAAMhE,aAAaiB,KAAI,SAAAK,GAAC,MAAK,CAC3BJ,KAAMI,EAAGH,SAAS,OALa,mBAG5BlB,EAH4B,KAGnBM,EAHmB,OASLQ,oBAAS,GATJ,mBAS5BI,EAT4B,KASnBmC,EATmB,KAgB7BsC,EAAiB,SAACtE,GAAD,OAAO,SAACC,GAC7BtB,EAAQqB,GAAGJ,KAAOK,EAAEC,OAAOC,MAC3BlB,EAAW,YAAIN,MAGX4F,EAAa,SAACvE,GAAD,OAAO,WACX,SAATV,IACFX,EAAQqB,GAAGH,SAAU,EACrBZ,EAAW,YAAIN,OAIbkF,EAAc,SAAC7D,GAAD,OAAO,WACzBgC,GAAW,GACXrD,EAAQqB,GAAGH,SAAU,EAEU,KAA3BlB,EAAQqB,GAAGJ,KAAKS,QAClB1B,EAAQ2B,OAAON,EAAG,GAGpBf,EAAW,YAAIN,IACf+D,EAAMzD,WAAWN,EAAQgB,KAAI,SAAAK,GAAC,OAAIA,EAAEJ,WAGtC,OACE,kBAAC,EAAD,CACEhD,MAAM,SACNyE,aAAc,CAAEyC,KAAM,KACtBxC,UAAW,CAAE2B,YAAa,WAE1B,kBAAC,EAAD,KACE,wBAAIpG,UAAU,mBACX8B,EAAQgB,KAAI,SAAC+D,EAAG1D,GAAJ,OACX,wBACEO,IAAKP,EACLY,QAAS2D,EAAWvE,IAEnB0D,EAAE7D,SACD,2BACEhD,UAAU,wBACVsD,MAAOuD,EAAE9D,KACTY,SAAU8D,EAAetE,GACzBS,OAAQoD,EAAY7D,GACpBU,WAAS,KAGXgD,EAAE7D,SAAW6D,EAAE9D,UAKZ,SAATN,IAAqBO,GACrB,4BACEhD,UAAU,uBACV+D,QA3DQ,WAChBoB,GAAW,GACX/C,EAAW,GAAD,mBAAMN,GAAN,CAAe,CAAEiB,KAAM,GAAIC,SAAS,QAuDxC,QC9DJ2E,G,MAAQ,SAAC,GAAD,IAAGjD,EAAH,EAAGA,SAAH,OACZ,yBAAK1E,UAAU,2BACb,wBAAIA,UAAU,+BAA+B0E,MAI3CkD,EAAa,SAAC,GAGb,IACDC,EAHJC,EAEI,EAFJA,IASA,MAJa,WAHT,EADJC,OAKEF,EAAO,uBAAG7H,UAAU,kBAIpB,uBACEgI,KAAMF,EACNzE,OAAO,SACP4E,IAAI,uBAEHJ,IA0DQK,EArDG,WAAO,IACfzF,EAASC,qBAAWC,GAApBF,KAEAxB,EAAYgD,cAAZhD,QAEF4E,EAAQhD,EAAQ5B,QAAQA,EAAS,CACrCL,WAAsB,WAAT6B,IAGf,OACE,yBAAKzC,UAAU,aACb,yBAAKA,UAAU,qBACb,kBAAC,EAAD,mCAKA,yBAAKA,UAAU,2BAEb,kBAAC,EAAD,CAAY8H,IAAI,qBAAqBC,KAAK,aAI9C,kBAAC,EAAD,CAAalC,MAAOA,IACpB,kBAAC,EAAD,CAAoBA,MAAOA,IAE3B,yBAAKlB,MAAO,CAAEwD,QAAS,SACrB,kBAAC,EAAD,CAAatC,MAAOA,IACpB,kBAAC,EAAD,CAAuBA,MAAOA,IAC9B,kBAAC,EAAD,CAAeA,MAAOA,OCvCfuC,G,MAxBK,WAClB,OACE,yBAAKpI,UAAU,gBACb,kBAAC,EAAD,CAASD,MAAM,gBACb,uBAAGiI,KAAK,wCAAwC3E,OAAO,SAAS4E,IAAI,uBAClE,yBAAKjI,UAAU,gBAAgBqI,IAAI,aAAaC,IAAI,2CAGtD,uBAAGN,KAAK,wCAAwC3E,OAAO,SAAS4E,IAAI,uBAClE,yBAAKjI,UAAU,gBAAgBqI,IAAI,aAAaC,IAAI,2CAGtD,uBAAGN,KAAK,wCAAwC3E,OAAO,SAAS4E,IAAI,uBAClE,yBAAKjI,UAAU,gBAAgBqI,IAAI,aAAaC,IAAI,2CAGtD,uBAAGN,KAAK,wCAAwC3E,OAAO,SAAS4E,IAAI,uBAClE,yBAAKjI,UAAU,gBAAgBqI,IAAI,aAAaC,IAAI,+CCdjD3F,G,MAAc4F,IAAMC,cAAc,WAgDhCC,MA9Cf,WAAgB,IAAD,EACW7F,mBAAS,UADpB,mBACNH,EADM,KACAiG,EADA,KAGb,OACE,kBAAC/F,EAAYgG,SAAb,CAAsBrF,MAAO,CAAEb,OAAMiG,YACnC,yBAAK1I,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,EAAD,MAEA,kBAAC,IAAD,CAAOsE,KAAK,aAAaF,OAAK,GAC5B,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOE,KAAK,yBAAyBF,OAAK,GACxC,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOE,KAAK,6BAA6BF,OAAK,IAI9C,kBAAC,IAAD,CAAOE,KAAK,qBAAqBF,OAAK,IAItC,kBAAC,IAAD,CAAOE,KAAK,gBAAgBF,OAAK,IAIjC,kBAAC,IAAD,CAAOE,KAAK,kBAAkBF,OAAK,IAInC,kBAAC,IAAD,CAAOE,KAAK,uBAAuBF,OAAK,IAIxC,kBAAC,IAAD,CAAOE,KAAK,qBAAqBF,OAAK,QClC5BwE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.addb5359.chunk.js","sourcesContent":["import React from 'react'\nimport '../css/NavHeader.css'\n\nconst NavHeader = ({\n  title\n}) => {\n  return (\n    <div className=\"navheader\">\n      <h4 className=\"navheader--title\">{title}</h4>\n    </div>\n  )\n}\n\nexport default NavHeader\n","import _staticJSON from '../data.json'\n\nconst Storage = () => {\n  const STORAGE_KEY = 'projects_data'\n\n  let _data = {\n    projects: {\n\n    }\n  }\n\n  const _save = () => {\n    const jsonString = JSON.stringify(_data)\n    localStorage.setItem(STORAGE_KEY, jsonString)\n  }\n\n  const _controller = {\n    getProjects: ({ staticData = false } = {}) => {\n      if (staticData) {\n        return Object.keys(_staticJSON.projects)\n      }\n\n      return Object.keys(_data.projects)\n    },\n    addProject: (project) => {\n      if (!_data.projects[project]) {\n        _data.projects[project] = {}\n        _save()\n      }\n    },\n    project: (project, { staticData = false } = {}) => {\n      let _get\n\n      if (staticData) {\n        _get = () => _staticJSON.projects[project]\n      } else {\n        _get = () => _data.projects[project]\n      }\n\n      const _pc = {\n        // GETTERS\n        getTitle: () => _get().title || '',\n        getTech: () => _get().technologies || [],\n        getDescription: () => _get().description || '',\n        getGoals: () => _get().goals || [],\n        getTargetAudience: () => _get().targetAudience || [],\n        getImpacts: () => _get().impacts || [],\n        // SETTERS\n        setTitle: (title) => {\n          _get().title = title\n          _save()\n        },\n        setTech: (technologies) => {\n          _get().technologies = technologies\n          _save()\n        },\n        setDescription: (description) => {\n          _get().description = description\n          _save()\n        },\n        setGoals: (goals) => {\n          _get().goals = goals\n          _save()\n        },\n        setTargetAudience: (targetAudience) => {\n          _get().targetAudience = targetAudience\n          _save()\n        },\n        setImpacts: (impacts) => {\n          _get().impacts = impacts\n          _save()\n        }\n      }\n\n      return _pc\n    }\n  }\n\n  // Initialize localStorage\n  if (!localStorage.getItem(STORAGE_KEY))\n    _save()\n  else {\n    _data = JSON.parse(localStorage.getItem(STORAGE_KEY))\n  }\n\n  return _controller\n}\n\nconst _storage = Storage()\n\nexport default _storage\n","import React, { useState, useContext } from 'react'\nimport {\n  Route,\n  NavLink,\n  useParams\n} from 'react-router-dom'\nimport NavHeader from './NavHeader'\nimport { ModeContext } from '../App'\nimport storage from '../controllers/storage'\nimport '../css/NavBar.css'\n\nconst ProjectLinks = () => {\n  const { mode } = useContext(ModeContext)\n\n  const [projects, setProjects] = useState(\n    storage.getProjects({\n      staticData: (mode === 'static')\n    }).map(project => ({\n      text: project, editing: false\n    }))\n  )\n\n  const addNewProject = () => {\n    setProjects([...projects, { text: '', editing: true }])\n  }\n\n  const setProject = (i) => (e) => {\n    projects[i].text = e.target.value\n    setProjects([...projects])\n  }\n\n  const saveProject = (i) => () => {\n    projects[i].editing = false\n\n    if (projects[i].text.trim() === '') {\n      projects.splice(i, 1)\n      return setProjects([...projects])\n    }\n\n    setProjects([...projects])\n    storage.addProject(projects[i].text)\n  }\n\n  return (\n    <>\n      {projects.map((project, i) => (\n        (project.editing) ?\n          <input\n            key={i}\n            value={project.text}\n            className=\"navlink navlink--edit\"\n            onChange={setProject(i)}\n            onBlur={saveProject(i)}\n            autoFocus\n          /> :\n          <NavLink\n            key={i}\n            to={`/${project.text}/`}\n            className=\"navlink\"\n          >\n            {project.text}\n          </NavLink>\n      ))}\n\n      {mode === 'edit' &&\n        <button\n          className=\"navlink navlink--add\"\n          onClick={addNewProject}\n        >\n          + New Project\n        </button>\n      }\n    </>\n  )\n}\n\nconst ProjectDetailLinks = () => {\n  const { project } = useParams()\n\n  return (\n    <>\n      <NavLink\n        to={`/${project}/`}\n        className=\"navlink\"\n        activeClassName=\"navlink--active\"\n        replace\n        exact\n      >\n        Dashboard\n      </NavLink>\n\n      <NavLink\n        to={`/${project}/design/ideas`}\n        className=\"navlink\"\n        activeClassName=\"navlink--active\"\n        replace\n        exact\n      >\n        Design Ideas\n      </NavLink>\n\n      <NavLink\n        to={`/${project}/react-components`}\n        className=\"navlink\"\n        activeClassName=\"navlink--active\"\n        replace\n        exact\n      >\n        React Components\n      </NavLink>\n\n      <NavLink\n        to={`/${project}/timeline`}\n        className=\"navlink\"\n        activeClassName=\"navlink--active\"\n        replace\n        exact\n      >\n        Timeline\n      </NavLink>\n\n      <NavLink\n        to={`/${project}/uml`}\n        className=\"navlink\"\n        activeClassName=\"navlink--active\"\n        replace\n        exact\n      >\n        UML\n      </NavLink>\n\n      <NavLink\n        to={`/${project}/tasks`}\n        className=\"navlink\"\n        activeClassName=\"navlink--active\"\n        replace\n        exact\n      >\n        Tasks\n      </NavLink>\n\n      <NavLink\n        to={`/${project}/statistics`}\n        className=\"navlink\"\n        activeClassName=\"navlink--active\"\n        replace\n        exact\n      >\n        Statistics\n      </NavLink>\n\n      <NavLink\n        to={`/${project}/settings`}\n        className=\"navlink\"\n        activeClassName=\"navlink--active\"\n        replace\n        exact\n      >\n        Settings\n      </NavLink>\n    </>\n  )\n}\n\nconst NavBar = () => {\n  return (\n    <div className=\"navbar\">\n      <NavHeader title=\"Project Name\" />\n      \n      <div className=\"navbar--links\">\n        <Route path=\"/\" exact>\n          <ProjectLinks />\n        </Route>\n\n        <Route path=\"/:project\">\n          <ProjectDetailLinks />\n        </Route>\n      </div>\n    </div>\n  )\n}\n\nexport default NavBar\n","import React from 'react'\nimport '../css/Section.css'\n\nconst Section = ({\n  title,\n  sectionStyle = {},\n  bodyStyle = {},\n  children\n}) => {\n  return (\n    <div className=\"section\" style={sectionStyle}>\n      <h6\n        className=\"section--title\"\n      >\n          {title}\n        </h6>\n      <div className=\"section--body\" style={bodyStyle}>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default Section\n","import React, { useState, useContext } from 'react'\nimport Section from './Section'\nimport { ModeContext } from '../App'\n\nconst noop = () => {}\n\nconst TechTab = ({\n  color,\n  styles = {},\n  first = false,\n  last = false,\n  editing = false,\n  onChange = noop,\n  setValue = noop,\n  setEditing = noop,\n  onClick = false,\n  children\n}) => {\n  let _styles = {\n    ...styles\n  }\n\n  if (color) {\n    _styles.backgroundColor = color\n  }\n\n  if (first) {\n    _styles.marginLeft = '0'\n  }\n\n  if (last) {\n    _styles.marginRight = '0'\n  }\n\n  const renderBody = () => {\n    if (!editing)\n      return children\n    return (\n      <input\n        type=\"text\"\n        value={children}\n        className=\"dashboard--techtab__edit\"\n        style={{\n          width: `${children.length * 10}px`\n        }}\n        onChange={(e) => onChange(e.target.value)}\n        onKeyDown={({ key }) => (key === 'Enter' || key === 'Return') && setValue()}\n        onBlur={setValue}\n        autoFocus\n      />\n    )\n  }\n\n  return (\n    <div\n      className=\"dashboard--techtab\"\n      style={_styles}\n      onClick={onClick || setEditing}\n    >\n      {renderBody()}\n    </div>\n  )\n}\n\nconst TechSection = ({ store }) => {\n  const { mode } = useContext(ModeContext)\n\n  const [tech, setTech] = useState(\n    store.getTech().map(t => ({\n      text: t, editing: false\n    }))\n  )\n\n  const [editing, setEditing] = useState(false)\n\n  const addTech = () => {\n    setTech([...tech, { text: '', editing: true }])\n    setEditing(true)\n  }\n\n  const editTech = (i) => (newTech) => {\n    tech[i].text = newTech\n    setTech([...tech])\n  }\n\n  const setEditingFor = (i) => () => {\n    if (mode === 'edit') {\n      tech[i].editing = true\n      setEditing(true)\n    }\n  }\n\n  const finishEditingTech = (i) => () => {\n    if (tech[i].text.trim() === '')\n      tech.splice(i, 1)\n    else\n      tech[i].editing = false\n\n    setTech([...tech])\n    setEditing(false)\n    store.setTech(tech.map(t => t.text))\n  }\n\n  return (\n    <Section title=\"Technologies Used\">\n      {tech && tech.map((t, i) => (\n        <TechTab\n          key={i}\n          first={i === 0}\n          color=\"#705CF1\"\n          editing={t.editing}\n          onChange={editTech(i)}\n          setEditing={setEditingFor(i)}\n          setValue={finishEditingTech(i)}\n        >\n          {t.text}\n        </TechTab>\n      ))}\n\n      {(mode === 'edit') && !editing && <TechTab\n        last\n        color=\"transparent\"\n        styles={{\n          color: '#705CF1',\n          paddingLeft: '20px',\n          paddingRight: '20px',\n          border: '2px solid #705CF1',\n          cursor: 'pointer'\n        }}\n        onClick={() => addTech()}\n      >\n        +\n      </TechTab>}\n    </Section>\n  )\n}\n\nexport default TechSection\n","import React from 'react'\nimport '../css/Card.css'\n\nconst noop = () => {}\n\nconst Card = ({\n  style = {},\n  onClick = noop,\n  children\n}) => (\n  <div style={style} className=\"card\" onClick={onClick}>\n    {children}\n  </div>\n)\n\nexport default Card\n","import React, { useState, useContext } from 'react'\nimport TextareaAutosize from 'react-textarea-autosize'\nimport Section from './Section'\nimport Card from './Card'\nimport { ModeContext } from '../App'\n\nconst DescriptionSection = ({ store }) => {\n  const { mode } = useContext(ModeContext)\n\n  const [description, setDescription] = useState(\n    store.getDescription()\n  )\n  \n  const [editing, setEditing] = useState(false)\n\n  const doneEditing = () => {\n    setEditing(false)\n    store.setDescription(description)\n  }\n\n  return (\n    <Section title=\"Project Description\">\n      <Card onClick={() => setEditing(mode === 'edit')}>\n        <h4\n          className=\"dashboard--description\"\n        >\n          {editing &&\n            <TextareaAutosize\n              value={description}\n              className=\"dashboard--description__edit\"\n              onChange={(e) => setDescription(e.target.value)}\n              onBlur={doneEditing}\n              autoFocus\n            />\n          }\n          {!editing && description.split('\\n\\n').map((d, i) => (\n            <p key={i}>{d}</p>\n          ))}\n        </h4>\n      </Card>\n    </Section>\n  )\n}\n\nexport default DescriptionSection\n","import React, { useState, useContext } from 'react'\nimport Section from './Section'\nimport Card from './Card'\nimport { ModeContext } from '../App'\n\nconst GoalSection = ({ store }) => {\n  const { mode } = useContext(ModeContext)\n\n  const [goals, setGoals] = useState(\n    store.getGoals().map(g => ({\n      text: g, editing: false\n    }))\n  )\n\n  const [editing, setEditing] = useState(false)\n\n  const addGoal = () => {\n    setEditing(true)\n    setGoals([ ...goals, { text: '', editing: true }])\n  }\n\n  const setGoalValue = (i) => (e) => {\n    goals[i].text = e.target.value\n    setGoals([...goals])\n  }\n\n  const editGoal = (i) => () => {\n    if (mode === 'edit') {\n      goals[i].editing = true\n      setGoals([...goals])\n    }\n  }\n\n  const doneEditing = (i) => () => {\n    setEditing(false)\n    goals[i].editing = false\n\n    if (goals[i].text.trim() === '') {\n      goals.splice(i, 1)\n    }\n\n    setGoals([...goals])\n    store.setGoals(goals.map(g => g.text))\n  }\n\n  return (\n    <Section\n      title=\"Goal\"\n      sectionStyle={{ flex: '1' }}\n      bodyStyle={{ paddingRight: '12.5px' }}\n    >\n      <Card>\n        <ul className=\"dashboard--list\">\n          {goals.map((g, i) => (\n            <li\n              key={i}\n              onClick={editGoal(i)}\n            >\n              {g.editing &&\n                <input\n                  className=\"dashboard--list__edit\"\n                  value={g.text}\n                  onChange={setGoalValue(i)}\n                  onBlur={doneEditing(i)}\n                  autoFocus\n                />\n              }\n              {!g.editing && g.text}\n            </li>\n          ))}\n        </ul>\n\n        {(mode === 'edit') && !editing &&\n          <button\n            className=\"dashboard--list__add\"\n            onClick={addGoal}\n          >\n            +\n          </button>\n        }\n      </Card>\n    </Section>\n  )\n}\n\nexport default GoalSection\n","import React, { useState, useContext } from 'react'\nimport Section from './Section'\nimport Card from './Card'\nimport { ModeContext } from '../App'\n\nconst TargetAudienceSection = ({ store }) => {\n  const { mode } = useContext(ModeContext)\n  \n  const [audience, setAudience] = useState(\n    store.getTargetAudience().map(ta => ({\n      text: ta, editing: false\n    }))\n  )\n\n  const [editing, setEditing] = useState(false)\n\n  const addAudience = () => {\n    setEditing(true)\n    setAudience([ ...audience, { text: '', editing: true }])\n  }\n\n  const setAudienceValue = (i) => (e) => {\n    audience[i].text = e.target.value\n    setAudience([...audience])\n  }\n\n  const editAudience = (i) => () => {\n    if (mode === 'edit') {\n      audience[i].editing = true\n      setAudience([...audience])\n    }\n  }\n\n  const doneEditing = (i) => () => {\n    setEditing(false)\n    audience[i].editing = false\n\n    if (audience[i].text.trim() === '') {\n      audience.splice(i, 1)\n    }\n\n    setAudience([...audience])\n    store.setTargetAudience(audience.map(ta => ta.text))\n  }\n\n  return (\n    <Section\n      title=\"Target Audience\"\n      sectionStyle={{ flex: '1' }}\n      bodyStyle={{ paddingLeft: '12.5px' }}\n    >\n      <Card>\n        <ul className=\"dashboard--list\">\n          {audience.map((g, i) => (\n            <li\n              key={i}\n              onClick={editAudience(i)}\n            >\n              {g.editing &&\n                <input\n                  className=\"dashboard--list__edit\"\n                  value={g.text}\n                  onChange={setAudienceValue(i)}\n                  onBlur={doneEditing(i)}\n                  autoFocus\n                />\n              }\n              {!g.editing && g.text}\n            </li>\n          ))}\n        </ul>\n\n        {(mode === 'edit') && !editing &&\n          <button\n            className=\"dashboard--list__add\"\n            onClick={addAudience}\n          >\n            +\n          </button>\n        }\n      </Card>\n    </Section>\n  )\n}\n\nexport default TargetAudienceSection\n","import React, { useState, useContext } from 'react'\nimport Section from './Section'\nimport Card from './Card'\nimport { ModeContext } from '../App'\n\nconst ImpactSection = ({ store }) => {\n  const { mode } = useContext(ModeContext)\n\n  const [impacts, setImpacts] = useState(\n    store.getImpacts().map(i => ({\n      text: i, editing: false\n    }))\n  )\n\n  const [editing, setEditing] = useState(false)\n\n  const addImpact = () => {\n    setEditing(true)\n    setImpacts([ ...impacts, { text: '', editing: true }])\n  }\n\n  const setImpactValue = (i) => (e) => {\n    impacts[i].text = e.target.value\n    setImpacts([...impacts])\n  }\n\n  const editImpact = (i) => () => {\n    if (mode === 'edit') {\n      impacts[i].editing = true\n      setImpacts([...impacts])\n    }\n  }\n\n  const doneEditing = (i) => () => {\n    setEditing(false)\n    impacts[i].editing = false\n\n    if (impacts[i].text.trim() === '') {\n      impacts.splice(i, 1)\n    }\n\n    setImpacts([...impacts])\n    store.setImpacts(impacts.map(i => i.text))\n  }\n\n  return (\n    <Section\n      title=\"Impact\"\n      sectionStyle={{ flex: '1' }}\n      bodyStyle={{ paddingLeft: '12.5px' }}\n    >\n      <Card>\n        <ul className=\"dashboard--list\">\n          {impacts.map((g, i) => (\n            <li\n              key={i}\n              onClick={editImpact(i)}\n            >\n              {g.editing &&\n                <input\n                  className=\"dashboard--list__edit\"\n                  value={g.text}\n                  onChange={setImpactValue(i)}\n                  onBlur={doneEditing(i)}\n                  autoFocus\n                />\n              }\n              {!g.editing && g.text}\n            </li>\n          ))}\n        </ul>\n\n        {(mode === 'edit') && !editing &&\n          <button\n            className=\"dashboard--list__add\"\n            onClick={addImpact}\n          >\n            +\n          </button>\n        }\n      </Card>\n    </Section>\n  )\n}\n\nexport default ImpactSection\n","import React, { useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport TechSection from './TechSection'\nimport DescriptionSection from './DescriptionSection'\nimport GoalSection from './GoalSection'\nimport TargetAudienceSection from './TargetAudienceSection'\nimport ImpactSection from './ImpactSection'\nimport { ModeContext } from '../App'\nimport storage from '../controllers/storage'\nimport '../css/Dashboard.css'\n\nconst Title = ({ children }) => (\n  <div className=\"dashboard--header-title\">\n    <h3 className=\"dashboard--header-title__h4\">{children}</h3>\n  </div>\n)\n\nconst SocialLink = ({\n  url,\n  icon\n}) => {\n  let Icon\n\n  if (icon === 'github') {\n    Icon = <i className=\"fa fa-github\"></i>\n  }\n\n  return (\n    <a\n      href={url}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {Icon}\n    </a>\n  )\n}\n\nconst Dashboard = () => {\n  const { mode } = useContext(ModeContext)\n\n  const { project } = useParams()\n  \n  const store = storage.project(project, {\n    staticData: (mode === 'static')\n  })\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard--header\">\n        <Title>\n          {/* Need to use something like `store.getTitle()` here */}\n          Project Planner / Showcase\n        </Title>\n\n        <div className=\"dashboard--header-links\">\n          {/* Need to use something like `store.getLinks()` here */}\n          <SocialLink url=\"https://github.com\" icon=\"github\" />\n        </div>\n      </div>\n      \n      <TechSection store={store} />\n      <DescriptionSection store={store} />\n\n      <div style={{ display: 'flex' }}>\n        <GoalSection store={store} />\n        <TargetAudienceSection store={store} />\n        <ImpactSection store={store} />\n      </div>\n\n      {/* <Section title=\"Drawings\">\n        <a href=\"https://i.ibb.co/hMNSRKW/IMG-1310.jpg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img className=\"drawing-image\" alt=\"Drawings-1\" src=\"https://i.ibb.co/hMNSRKW/IMG-1310.jpg\" />\n        </a>\n\n        <a href=\"https://i.ibb.co/nwtsP3d/IMG-1308.jpg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img className=\"drawing-image\" alt=\"Drawings-2\" src=\"https://i.ibb.co/nwtsP3d/IMG-1308.jpg\" />\n        </a>\n\n        <a href=\"https://i.ibb.co/M1mMxnQ/IMG-1311.jpg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img className=\"drawing-image\" alt=\"Drawings-3\" src=\"https://i.ibb.co/M1mMxnQ/IMG-1311.jpg\" />\n        </a>\n\n        <a href=\"https://i.ibb.co/SrKxCGc/IMG-1309.jpg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img className=\"drawing-image\" alt=\"Drawings-4\" src=\"https://i.ibb.co/SrKxCGc/IMG-1309.jpg\" />\n        </a>\n      </Section> */}\n    </div>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport Section from './Section'\nimport '../css/DesignIdeas.css'\n\nconst DesignIdeas = () => {\n  return (\n    <div className=\"design-ideas\">\n      <Section title=\"Design Ideas\">\n        <a href=\"https://i.ibb.co/hMNSRKW/IMG-1310.jpg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img className=\"drawing-image\" alt=\"Drawings-1\" src=\"https://i.ibb.co/hMNSRKW/IMG-1310.jpg\" />\n        </a>\n\n        <a href=\"https://i.ibb.co/nwtsP3d/IMG-1308.jpg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img className=\"drawing-image\" alt=\"Drawings-2\" src=\"https://i.ibb.co/nwtsP3d/IMG-1308.jpg\" />\n        </a>\n\n        <a href=\"https://i.ibb.co/M1mMxnQ/IMG-1311.jpg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img className=\"drawing-image\" alt=\"Drawings-3\" src=\"https://i.ibb.co/M1mMxnQ/IMG-1311.jpg\" />\n        </a>\n\n        <a href=\"https://i.ibb.co/SrKxCGc/IMG-1309.jpg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img className=\"drawing-image\" alt=\"Drawings-4\" src=\"https://i.ibb.co/SrKxCGc/IMG-1309.jpg\" />\n        </a>\n      </Section>\n    </div>\n  )\n}\n\nexport default DesignIdeas\n","import React, { useState } from 'react';\nimport { Route } from 'react-router-dom'\nimport NavBar from './components/NavBar'\nimport Dashboard from './components/Dashboard'\nimport DesignIdeas from './components/DesignIdeas'\nimport './css/App.css'\n\nexport const ModeContext = React.createContext('static')\n\nfunction App() {\n  const [mode, setMode] = useState('static')\n\n  return (\n    <ModeContext.Provider value={{ mode, setMode }}>\n      <div className=\"App\">\n        <div className=\"container\">\n          <NavBar />\n\n          <Route path=\"/:project/\" exact>\n            <Dashboard />\n          </Route>\n\n          <Route path=\"/:project/design/ideas\" exact>\n            <DesignIdeas />\n          </Route>\n\n          <Route path=\"/:project/react/components\" exact>\n            \n          </Route>\n\n          <Route path=\"/:project/timeline\" exact>\n            \n          </Route>\n\n          <Route path=\"/:project/uml\" exact>\n            \n          </Route>\n\n          <Route path=\"/:project/tasks\" exact>\n            \n          </Route>\n\n          <Route path=\"/:project/statistics\" exact>\n            \n          </Route>\n\n          <Route path=\"/:project/settings\" exact>\n            \n          </Route>\n        </div>\n      </div>\n    </ModeContext.Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  HashRouter as Router\n} from 'react-router-dom'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './css/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}