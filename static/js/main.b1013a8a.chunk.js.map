{"version":3,"sources":["components/NavHeader.js","components/NavLink.js","components/NavBar.js","components/Section.js","components/TechSection.js","components/Card.js","components/DescriptionSection.js","components/GoalSection.js","components/TargetAudienceSection.js","components/ImpactSection.js","controllers/storage.js","components/Dashboard.js","components/DesignIdeas.js","App.js","serviceWorker.js","index.js"],"names":["NavHeader","title","className","NavLink","text","active","NavBar","path","useLocation","pathname","to","Section","sectionStyle","bodyStyle","children","style","noop","TechTab","color","styles","first","last","editing","onChange","setValue","setEditing","onClick","_styles","backgroundColor","marginLeft","marginRight","type","value","width","length","e","target","onKeyDown","key","onBlur","autoFocus","TechSection","store","useState","getTech","map","t","tech","setTech","editTech","i","newTech","setEditingFor","finishEditingTech","trim","splice","paddingLeft","paddingRight","border","cursor","Card","DescriptionSection","getDescription","description","setDescription","split","d","GoalSection","getGoals","g","goals","setGoals","setGoalValue","editGoal","doneEditing","flex","TargetAudienceSection","getTargetAudience","ta","audience","setAudience","setAudienceValue","editAudience","setTargetAudience","ImpactSection","getImpacts","impacts","setImpacts","setImpactValue","editImpact","_storage","_data","projects","_save","jsonString","JSON","stringify","localStorage","setItem","_controller","project","_get","_pc","getTitle","technologies","targetAudience","setTitle","getItem","parse","Storage","Title","SocialLink","Icon","url","icon","href","rel","Dashboard","console","log","storage","display","DesignIdeas","alt","src","App","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b1013a8a.chunk.js","sourcesContent":["import React from 'react'\nimport '../css/NavHeader.css'\n\nconst NavHeader = ({\n  title\n}) => {\n  return (\n    <div className=\"navheader\">\n      <h4 className=\"navheader--title\">{title}</h4>\n    </div>\n  )\n}\n\nexport default NavHeader\n","import React from 'react'\nimport '../css/NavLink.css'\n\nconst NavLink = ({\n  text,\n  active = false\n}) => {\n  return (\n    <div className={`navlink ${active ? 'navlink--active' : ''}`}>\n      {text}\n    </div>\n  )\n}\n\nexport default NavLink\n","import React from 'react'\nimport {\n  Link,\n  useLocation\n} from 'react-router-dom'\nimport NavHeader from './NavHeader'\nimport NavLink from './NavLink'\nimport '../css/NavBar.css'\n\nconst NavBar = () => {\n  const { pathname: path } = useLocation()\n\n  return (\n    <div className=\"navbar\">\n      <NavHeader title=\"Project Name\" />\n      \n      <div className=\"navbar--links\">\n        <Link to=\"/\">\n          <NavLink text=\"Dashboard\" active={path === '/'} />\n        </Link>\n\n        <Link to=\"/design/ideas\">\n          <NavLink text=\"Design Ideas\" active={path === '/design/ideas'} />\n        </Link>\n\n        <Link to=\"/react/components\">\n          <NavLink text=\"React Components\" active={path === '/react/components'} />\n        </Link>\n\n        <Link to=\"/timeline\">\n          <NavLink text=\"Timeline\" active={path === '/timeline'} />\n        </Link>\n\n        <Link to=\"/uml\">\n          <NavLink text=\"UML\" active={path === '/uml'} />\n        </Link>\n\n        <Link to=\"/tasks\">\n          <NavLink text=\"Tasks\" active={path === '/tasks'} />\n        </Link>\n\n        <Link to=\"/statistics\">\n          <NavLink text=\"Statistics\" active={path === '/statistics'} />\n        </Link>\n\n        <Link to=\"/settings\">\n          <NavLink text=\"Settings\" active={path === '/settings'} />\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default NavBar\n","import React from 'react'\nimport '../css/Section.css'\n\nconst Section = ({\n  title,\n  sectionStyle = {},\n  bodyStyle = {},\n  children\n}) => {\n  return (\n    <div className=\"section\" style={sectionStyle}>\n      <h6\n        className=\"section--title\"\n      >\n          {title}\n        </h6>\n      <div className=\"section--body\" style={bodyStyle}>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default Section\n","import React, { useState } from 'react'\nimport Section from './Section'\n\nconst noop = () => {}\n\nconst TechTab = ({\n  color,\n  styles = {},\n  first = false,\n  last = false,\n  editing = false,\n  onChange = noop,\n  setValue = noop,\n  setEditing = noop,\n  onClick = false,\n  children\n}) => {\n  let _styles = {\n    ...styles\n  }\n\n  if (color) {\n    _styles.backgroundColor = color\n  }\n\n  if (first) {\n    _styles.marginLeft = '0'\n  }\n\n  if (last) {\n    _styles.marginRight = '0'\n  }\n\n  const renderBody = () => {\n    if (!editing)\n      return children\n    return (\n      <input\n        type=\"text\"\n        value={children}\n        className=\"dashboard--techtab__edit\"\n        style={{\n          width: `${children.length * 10}px`\n        }}\n        onChange={(e) => onChange(e.target.value)}\n        onKeyDown={({ key }) => (key === 'Enter' || key === 'Return') && setValue()}\n        onBlur={setValue}\n        autoFocus\n      />\n    )\n  }\n\n  return (\n    <div\n      className=\"dashboard--techtab\"\n      style={_styles}\n      onClick={onClick || setEditing}\n    >\n      {renderBody()}\n    </div>\n  )\n}\n\nconst TechSection = ({ store }) => {\n  const [tech, setTech] = useState(\n    store.getTech().map(t => ({\n      text: t, editing: false\n    }))\n  )\n\n  const [editing, setEditing] = useState(false)\n\n  const addTech = () => {\n    setTech([...tech, { text: '', editing: true }])\n    setEditing(true)\n  }\n\n  const editTech = (i) => (newTech) => {\n    tech[i].text = newTech\n    setTech([...tech])\n  }\n\n  const setEditingFor = (i) => () => {\n    tech[i].editing = true\n    setEditing(true)\n  }\n\n  const finishEditingTech = (i) => () => {\n    if (tech[i].text.trim() === '')\n      tech.splice(i, 1)\n    else\n      tech[i].editing = false\n\n    setTech([...tech])\n    setEditing(false)\n    store.setTech(tech.map(t => t.text))\n  }\n\n  return (\n    <Section title=\"Technologies Used\">\n      {tech && tech.map((t, i) => (\n        <TechTab\n          key={i}\n          first={i === 0}\n          color=\"#705CF1\"\n          editing={t.editing}\n          onChange={editTech(i)}\n          setEditing={setEditingFor(i)}\n          setValue={finishEditingTech(i)}\n        >\n          {t.text}\n        </TechTab>\n      ))}\n\n      {!editing && <TechTab\n        last\n        color=\"transparent\"\n        styles={{\n          color: '#705CF1',\n          paddingLeft: '20px',\n          paddingRight: '20px',\n          border: '2px solid #705CF1',\n          cursor: 'pointer'\n        }}\n        onClick={() => addTech()}\n      >\n        +\n      </TechTab>}\n    </Section>\n  )\n}\n\nexport default TechSection\n","import React from 'react'\nimport '../css/Card.css'\n\nconst noop = () => {}\n\nconst Card = ({\n  style = {},\n  onClick = noop,\n  children\n}) => (\n  <div style={style} className=\"card\" onClick={onClick}>\n    {children}\n  </div>\n)\n\nexport default Card\n","import React, { useState } from 'react'\nimport TextareaAutosize from 'react-textarea-autosize'\nimport Section from './Section'\nimport Card from './Card'\n\nconst DescriptionSection = ({ store }) => {\n  const [description, setDescription] = useState(\n    store.getDescription()\n  )\n  \n  const [editing, setEditing] = useState(false)\n\n  const doneEditing = () => {\n    setEditing(false)\n    store.setDescription(description)\n  }\n\n  return (\n    <Section title=\"Project Description\">\n      <Card onClick={() => setEditing(true)}>\n        <h4\n          className=\"dashboard--description\"\n        >\n          {editing &&\n            <TextareaAutosize\n              value={description}\n              className=\"dashboard--description__edit\"\n              onChange={(e) => setDescription(e.target.value)}\n              onBlur={doneEditing}\n              autoFocus\n            />\n          }\n          {!editing && description.split('\\n\\n').map((d, i) => (\n            <p key={i}>{d}</p>\n          ))}\n        </h4>\n      </Card>\n    </Section>\n  )\n}\n\nexport default DescriptionSection\n","import React, { useState } from 'react'\nimport Section from './Section'\nimport Card from './Card'\n\nconst GoalSection = ({ store }) => {\n  const [goals, setGoals] = useState(\n    store.getGoals().map(g => ({\n      text: g, editing: false\n    }))\n  )\n\n  const [editing, setEditing] = useState(false)\n\n  const addGoal = () => {\n    setEditing(true)\n    setGoals([ ...goals, { text: '', editing: true }])\n  }\n\n  const setGoalValue = (i) => (e) => {\n    goals[i].text = e.target.value\n    setGoals([...goals])\n  }\n\n  const editGoal = (i) => () => {\n    goals[i].editing = true\n    setGoals([...goals])\n  }\n\n  const doneEditing = (i) => () => {\n    setEditing(false)\n    goals[i].editing = false\n\n    if (goals[i].text.trim() === '') {\n      goals.splice(i, 1)\n    }\n\n    setGoals([...goals])\n    store.setGoals(goals.map(g => g.text))\n  }\n\n  return (\n    <Section\n      title=\"Goal\"\n      sectionStyle={{ flex: '1' }}\n      bodyStyle={{ paddingRight: '12.5px' }}\n    >\n      <Card>\n        <ul className=\"dashboard--list\">\n          {goals.map((g, i) => (\n            <li\n              key={i}\n              onClick={editGoal(i)}\n            >\n              {g.editing &&\n                <input\n                  className=\"dashboard--list__edit\"\n                  value={g.text}\n                  onChange={setGoalValue(i)}\n                  onBlur={doneEditing(i)}\n                  autoFocus\n                />\n              }\n              {!g.editing && g.text}\n            </li>\n          ))}\n        </ul>\n\n        {!editing &&\n          <button\n            className=\"dashboard--list__add\"\n            onClick={addGoal}\n          >\n            +\n          </button>\n        }\n      </Card>\n    </Section>\n  )\n}\n\nexport default GoalSection\n","import React, { useState } from 'react'\nimport Section from './Section'\nimport Card from './Card'\n\nconst TargetAudienceSection = ({ store }) => {\n  const [audience, setAudience] = useState(\n    store.getTargetAudience().map(ta => ({\n      text: ta, editing: false\n    }))\n  )\n\n  const [editing, setEditing] = useState(false)\n\n  const addAudience = () => {\n    setEditing(true)\n    setAudience([ ...audience, { text: '', editing: true }])\n  }\n\n  const setAudienceValue = (i) => (e) => {\n    audience[i].text = e.target.value\n    setAudience([...audience])\n  }\n\n  const editAudience = (i) => () => {\n    audience[i].editing = true\n    setAudience([...audience])\n  }\n\n  const doneEditing = (i) => () => {\n    setEditing(false)\n    audience[i].editing = false\n\n    if (audience[i].text.trim() === '') {\n      audience.splice(i, 1)\n    }\n\n    setAudience([...audience])\n    store.setTargetAudience(audience.map(ta => ta.text))\n  }\n\n  return (\n    <Section\n      title=\"Target Audience\"\n      sectionStyle={{ flex: '1' }}\n      bodyStyle={{ paddingLeft: '12.5px' }}\n    >\n      <Card>\n        <ul className=\"dashboard--list\">\n          {audience.map((g, i) => (\n            <li\n              key={i}\n              onClick={editAudience(i)}\n            >\n              {g.editing &&\n                <input\n                  className=\"dashboard--list__edit\"\n                  value={g.text}\n                  onChange={setAudienceValue(i)}\n                  onBlur={doneEditing(i)}\n                  autoFocus\n                />\n              }\n              {!g.editing && g.text}\n            </li>\n          ))}\n        </ul>\n\n        {!editing &&\n          <button\n            className=\"dashboard--list__add\"\n            onClick={addAudience}\n          >\n            +\n          </button>\n        }\n      </Card>\n    </Section>\n  )\n}\n\nexport default TargetAudienceSection\n","import React, { useState } from 'react'\nimport Section from './Section'\nimport Card from './Card'\n\nconst ImpactSection = ({ store }) => {\n  const [impacts, setImpacts] = useState(\n    store.getImpacts().map(i => ({\n      text: i, editing: false\n    }))\n  )\n\n  const [editing, setEditing] = useState(false)\n\n  const addImpact = () => {\n    setEditing(true)\n    setImpacts([ ...impacts, { text: '', editing: true }])\n  }\n\n  const setImpactValue = (i) => (e) => {\n    impacts[i].text = e.target.value\n    setImpacts([...impacts])\n  }\n\n  const editImpact = (i) => () => {\n    impacts[i].editing = true\n    setImpacts([...impacts])\n  }\n\n  const doneEditing = (i) => () => {\n    setEditing(false)\n    impacts[i].editing = false\n\n    if (impacts[i].text.trim() === '') {\n      impacts.splice(i, 1)\n    }\n\n    setImpacts([...impacts])\n    store.setImpacts(impacts.map(i => i.text))\n  }\n\n  return (\n    <Section\n      title=\"Impact\"\n      sectionStyle={{ flex: '1' }}\n      bodyStyle={{ paddingLeft: '12.5px' }}\n    >\n      <Card>\n        <ul className=\"dashboard--list\">\n          {impacts.map((g, i) => (\n            <li\n              key={i}\n              onClick={editImpact(i)}\n            >\n              {g.editing &&\n                <input\n                  className=\"dashboard--list__edit\"\n                  value={g.text}\n                  onChange={setImpactValue(i)}\n                  onBlur={doneEditing(i)}\n                  autoFocus\n                />\n              }\n              {!g.editing && g.text}\n            </li>\n          ))}\n        </ul>\n\n        {!editing &&\n          <button\n            className=\"dashboard--list__add\"\n            onClick={addImpact}\n          >\n            +\n          </button>\n        }\n      </Card>\n    </Section>\n  )\n}\n\nexport default ImpactSection\n","const Storage = () => {\n  const STORAGE_KEY = 'projects_data'\n\n  let _data = {\n    projects: {\n\n    }\n  }\n\n  const _save = () => {\n    const jsonString = JSON.stringify(_data)\n    localStorage.setItem(STORAGE_KEY, jsonString)\n  }\n\n  const _controller = {\n    project: (project) => {\n      const _get = () => _data.projects[project]\n\n      const _pc = {\n        // GETTERS\n        getTitle: () => _get().title || '',\n        getTech: () => _get().technologies || [],\n        getDescription: () => _get().description || '',\n        getGoals: () => _get().goals || [],\n        getTargetAudience: () => _get().targetAudience || [],\n        getImpacts: () => _get().impacts || [],\n        // SETTERS\n        setTitle: (title) => {\n          _get().title = title\n          _save()\n        },\n        setTech: (technologies) => {\n          _get().technologies = technologies\n          _save()\n        },\n        setDescription: (description) => {\n          _get().description = description\n          _save()\n        },\n        setGoals: (goals) => {\n          _get().goals = goals\n          _save()\n        },\n        setTargetAudience: (targetAudience) => {\n          _get().targetAudience = targetAudience\n          _save()\n        },\n        setImpacts: (impacts) => {\n          _get().impacts = impacts\n          _save()\n        }\n      }\n\n      // Initalize project if not set already\n      if (!_get()) {\n        _data.projects[project] = {}\n        _save()\n      }\n\n      return _pc\n    }\n  }\n\n  // Initialize localStorage\n  if (!localStorage.getItem(STORAGE_KEY))\n    _save()\n  else {\n    _data = JSON.parse(localStorage.getItem(STORAGE_KEY))\n  }\n\n  return _controller\n}\n\nconst _storage = Storage()\n\nexport default _storage\n","import React from 'react'\nimport TechSection from './TechSection'\nimport DescriptionSection from './DescriptionSection'\nimport GoalSection from './GoalSection'\nimport TargetAudienceSection from './TargetAudienceSection'\nimport ImpactSection from './ImpactSection'\nimport storage from '../controllers/storage'\nimport '../css/Dashboard.css'\n\nconst Title = ({ children }) => (\n  <div className=\"dashboard--header-title\">\n    <h3 className=\"dashboard--header-title__h4\">{children}</h3>\n  </div>\n)\n\nconst SocialLink = ({\n  url,\n  icon\n}) => {\n  let Icon\n\n  if (icon === 'github') {\n    Icon = <i className=\"fa fa-github\"></i>\n  }\n\n  return (\n    <a\n      href={url}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {Icon}\n    </a>\n  )\n}\n\nconst Dashboard = ({\n  project\n}) => {\n  console.log(project)\n  const store = storage.project(project)\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard--header\">\n        <Title>\n          {/* Need to use something like `store.getTitle()` here */}\n          Project Planner / Showcase\n        </Title>\n\n        <div className=\"dashboard--header-links\">\n          {/* Need to use something like `store.getLinks()` here */}\n          <SocialLink url=\"https://github.com\" icon=\"github\" />\n        </div>\n      </div>\n      \n      <TechSection store={store} />\n      <DescriptionSection store={store} />\n\n      <div style={{ display: 'flex' }}>\n        <GoalSection store={store} />\n        <TargetAudienceSection store={store} />\n        <ImpactSection store={store} />\n      </div>\n\n      {/* <Section title=\"Drawings\">\n        <a href=\"https://i.ibb.co/hMNSRKW/IMG-1310.jpg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img className=\"drawing-image\" alt=\"Drawings-1\" src=\"https://i.ibb.co/hMNSRKW/IMG-1310.jpg\" />\n        </a>\n\n        <a href=\"https://i.ibb.co/nwtsP3d/IMG-1308.jpg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img className=\"drawing-image\" alt=\"Drawings-2\" src=\"https://i.ibb.co/nwtsP3d/IMG-1308.jpg\" />\n        </a>\n\n        <a href=\"https://i.ibb.co/M1mMxnQ/IMG-1311.jpg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img className=\"drawing-image\" alt=\"Drawings-3\" src=\"https://i.ibb.co/M1mMxnQ/IMG-1311.jpg\" />\n        </a>\n\n        <a href=\"https://i.ibb.co/SrKxCGc/IMG-1309.jpg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img className=\"drawing-image\" alt=\"Drawings-4\" src=\"https://i.ibb.co/SrKxCGc/IMG-1309.jpg\" />\n        </a>\n      </Section> */}\n    </div>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport Section from './Section'\nimport '../css/DesignIdeas.css'\n\nconst DesignIdeas = () => {\n  return (\n    <div className=\"design-ideas\">\n      <Section title=\"Design Ideas\">\n        <a href=\"https://i.ibb.co/hMNSRKW/IMG-1310.jpg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img className=\"drawing-image\" alt=\"Drawings-1\" src=\"https://i.ibb.co/hMNSRKW/IMG-1310.jpg\" />\n        </a>\n\n        <a href=\"https://i.ibb.co/nwtsP3d/IMG-1308.jpg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img className=\"drawing-image\" alt=\"Drawings-2\" src=\"https://i.ibb.co/nwtsP3d/IMG-1308.jpg\" />\n        </a>\n\n        <a href=\"https://i.ibb.co/M1mMxnQ/IMG-1311.jpg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img className=\"drawing-image\" alt=\"Drawings-3\" src=\"https://i.ibb.co/M1mMxnQ/IMG-1311.jpg\" />\n        </a>\n\n        <a href=\"https://i.ibb.co/SrKxCGc/IMG-1309.jpg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img className=\"drawing-image\" alt=\"Drawings-4\" src=\"https://i.ibb.co/SrKxCGc/IMG-1309.jpg\" />\n        </a>\n      </Section>\n    </div>\n  )\n}\n\nexport default DesignIdeas\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Route\n} from 'react-router-dom'\nimport NavBar from './components/NavBar'\nimport Dashboard from './components/Dashboard'\nimport DesignIdeas from './components/DesignIdeas'\nimport './css/App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"container\">\n          <NavBar />\n\n          <Route path=\"/\" exact>\n            <Dashboard project=\"project-planner\" />\n          </Route>\n\n          <Route path=\"/design/ideas\" exact>\n            <DesignIdeas />\n          </Route>\n\n          <Route path=\"/react/components\" exact>\n            \n          </Route>\n\n          <Route path=\"/timeline\" exact>\n            \n          </Route>\n\n          <Route path=\"/uml\" exact>\n            \n          </Route>\n\n          <Route path=\"/tasks\" exact>\n            \n          </Route>\n\n          <Route path=\"/statistics\" exact>\n            \n          </Route>\n\n          <Route path=\"/settings\" exact>\n            \n          </Route>\n        </div>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './css/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}